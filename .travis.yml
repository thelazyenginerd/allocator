language: cpp

matrix:
  include:
  - os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - automake
        - autoconf
        - cppcheck
        - g++-5
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

  - os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - automake
        - autoconf
        - cppcheck
        - g++-6
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

  - os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - automake
        - autoconf
        - cppcheck
        - g++-7
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

  - os: linux
    dist: xenial
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - automake
        - autoconf
        - cppcheck
        - g++-8
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

  - os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-3.8
        packages:
        - automake
        - autoconf
        - clang-3.8
        - cppcheck
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

  - os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-3.9
        packages:
        - automake
        - autoconf
        - clang-3.9
        - cppcheck
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=clang && CXX=clang++"

  - os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-4.0
        packages:
        - automake
        - autoconf
        - clang-4.0
        - cppcheck
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

  - os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-5.0
        packages:
        - automake
        - autoconf
        - clang-5.0
        - cppcheck
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

  - os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-6.0
        packages:
        - automake
        - autoconf
        - clang-6.0
        - cppcheck
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"

  - os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-7
        packages:
        - automake
        - autoconf
        - clang-7
        - cppcheck
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"

  - os: linux
    dist: xenial
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-8
        packages:
        - automake
        - autoconf
        - clang-8
        - cppcheck
        - libboost-test-dev
        - make
        - valgrind
    env:
    - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"

before_install:
- eval "${MATRIX_EVAL}"
- pip install --user cpp-coveralls

script:
- cppcheck
    --enable=performance,portability,information,style,missingInclude
    .
- autoreconf -if
- ./configure
- make
- make check
- ${CXX} --version

after_success:
- if [[ "${CXX}" == "g++" ]]; then
    coveralls --gcov-options '\-lp';
  fi
